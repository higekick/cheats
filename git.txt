■commit
直前のcommitコメントを変更する
$ git commit --amend

commitをまとめる
$ git rebase -i HEAD~~~

リモートのコミットを取り消したい場合

http://tmtms.hatenablog.com/entry/20101221/git

■ブランチ
ブランチを作成してチェックアウト
$ git checkout -b hoge

リモートリポジトリをチェックアウト
$ git checkout hoge

いらなくなったブランチを削除(ローカル)
$ git branch -d foo

リモートのブランチを削除(削除したローカルをpushする)
$ git push origin :test

リモートの一覧
$ git branch --remote

ローカルブランチ名を変更
$git branch -m hoge foo

■push
$ git push origin hoge

ローカルでリモートを上書き(rebaseしてコミットをまとめた後、リモートにもそのまま反映させたい場合)
$ git push -f origin hoge

■スタッシュ
スタッシュ一覧
$ git stash list

名前を付けてstash
$git stash save [message]

スタッシュの中身表示 一覧から表示されたスタッシュ名を指定
$ git stash show stash@{0}

スタッシュを適用
$ git checkout stash@{0}

スタッシュをファイル単位で適用
$ git checkout stash@{0} fuaga.java

スタッシュを削除
git stash drop stash@{N} # N番目のスタッシュを削除

一部だけstashしたい場合
# A.txt, B.txt, C.txtのうち、B.txtだけstashしたいという場合

# (1) stashしたいファイル以外をコミット(ローカルだけ)
git add A.txt
git add C.txt
git commit -m '一時コミット(resetする)'

# (2) stashしたいファイルだけが残った状態でgit stash
git stash

# (3) 直前のコミットを取り消す
git reset HEAD~

■リベース

リベース後、リモートにプッシュ
$ git push --force origin step3_dialog_ad :step3_dialog_ad

■マージ
マージ checkout master後、masterにhogeをマージ
$ git merge hoge

■tag
タグをつける
$ git tag hoge-1.8.64

コメント付きタグ
$ git tag -a hoge-1.8.65

タグのpush
$ git push --tags

ローカルのタグ一覧
$ git tag -n

リモートのタグ一覧
$ git ls-remote --tags

タグを消す(ローカル)
$ git tag -d TAGNAME

タグを消す(リモート)
$ git push origin :TAGNAME

■git flow
SourceTreeからリリース作業(masterにタグ付けを行う作業)

1. 右上のGit Flowを押下し、「新規リリースを開始」
 リリース名にタグと同じ名前を記載する
  developと同じ位置にrelease/リリース名のブランチができる
  
2. 右上のGit Flowを押下し、「リリースを完了」
